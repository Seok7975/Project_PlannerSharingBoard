/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.89
 * Generated at: 2024-07-02 10:42:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.joinAndLogin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    String userID = request.getParameter("userID");
    Connection conn = null;
    PreparedStatement pstmt = null;
    ResultSet rs = null;

    String dbURL = "jdbc:mysql://localhost:3306/YOUR_DATABASE";
    String dbID = "YOUR_DB_ID";
    String dbPassword = "YOUR_DB_PASSWORD";

    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        conn = DriverManager.getConnection(dbURL, dbID, dbPassword);
        String SQL = "SELECT * FROM users WHERE userID = ?";
        pstmt = conn.prepareStatement(SQL);
        pstmt.setString(1, userID);
        rs = pstmt.executeQuery();
        if(rs.next()) {
            response.getWriter().write("false");
        } else {
            response.getWriter().write("true");
        }
    } catch (Exception e) {
        e.printStackTrace();
    } finally {
        try { if(rs != null) rs.close(); } catch (Exception e) { e.printStackTrace(); }
        try { if(pstmt != null) pstmt.close(); } catch (Exception e) { e.printStackTrace(); }
        try { if(conn != null) conn.close(); } catch (Exception e) { e.printStackTrace(); }
    }

      out.write("\r\n");
      out.write("2. 클라이언트 측 코드 (join.html)\r\n");
      out.write("이제 회원가입 페이지에 AJAX 요청을 추가합니다.\r\n");
      out.write("\r\n");
      out.write("html\r\n");
      out.write("복사\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap-theme.min.css\" integrity=\"sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp\" crossorigin=\"anonymous\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/bbsStyle.css\">\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js\" integrity=\"sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/jumbotronCustom.css\">\r\n");
      out.write("    <title>회원가입</title>\r\n");
      out.write("    <script>\r\n");
      out.write("        function checkID() {\r\n");
      out.write("            var userID = $(\"#userID\").val();\r\n");
      out.write("            if (userID.length < 4 || userID.length > 16) {\r\n");
      out.write("                $(\"#idCheck\").html(\"아이디는 4자 이상 16자 이하로 입력해주세요.\");\r\n");
      out.write("                $(\"#idCheck\").css(\"color\", \"red\");\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: \"checkID.jsp\",\r\n");
      out.write("                type: \"POST\",\r\n");
      out.write("                data: { userID: userID },\r\n");
      out.write("                success: function(data) {\r\n");
      out.write("                    if (data.trim() == \"true\") {\r\n");
      out.write("                        $(\"#idCheck\").html(\"사용 가능한 아이디입니다.\");\r\n");
      out.write("                        $(\"#idCheck\").css(\"color\", \"green\");\r\n");
      out.write("                    } else {\r\n");
      out.write("                        $(\"#idCheck\").html(\"이미 사용 중인 아이디입니다.\");\r\n");
      out.write("                        $(\"#idCheck\").css(\"color\", \"red\");\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error: function() {\r\n");
      out.write("                    $(\"#idCheck\").html(\"오류가 발생했습니다. 다시 시도해주세요.\");\r\n");
      out.write("                    $(\"#idCheck\").css(\"color\", \"red\");\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar navbar-default\">\r\n");
      out.write("        <!-- 네비게이션 바 생략 -->\r\n");
      out.write("    </nav>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"col-lg-4\"></div>\r\n");
      out.write("        <div class=\"col-lg-4\">\r\n");
      out.write("            <div class=\"jumbotron\" style=\"padding-top: 20px;\">\r\n");
      out.write("                <form method=\"post\" action=\"joinAction.jsp\" onsubmit=\"return validatePassword()\">\r\n");
      out.write("                    <h3 style=\"text-align: center;\">회원가입 화면</h3>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" placeholder=\"아이디\" name=\"userID\" id=\"userID\" required maxlength=\"20\" onkeyup=\"checkID()\">\r\n");
      out.write("                        <span id=\"idCheck\"></span>\r\n");
      out.write("                    </div>\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<input type=\"password\" class=\"form-control\" placeholder=\"비밀번호\" name=\"userPassword\" id=\"userPassword\" required maxlength=\"20\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<input type=\"password\" class=\"form-control\" placeholder=\"비밀번호 확인\" name=\"confirmPassword\" id=\"confirmPassword\" required maxlength=\"20\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<input type=\"text\" class=\"form-control\" placeholder=\"이름\" name=\"userName\" required maxlength=\"20\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"form-group\" style=\"text-align: center;\">\r\n");
      out.write("						<div class=\"btn-group\" data-toggle=\"buttons\">\r\n");
      out.write("							<label class=\"btn btn-primary\">\r\n");
      out.write("								<input type=\"radio\" name=\"userGender\" value=\"남자\" autocomplete=\"off\" required> 남자 <!-- autocomplete=\"off\" -->\r\n");
      out.write("							</label>\r\n");
      out.write("							<label class=\"btn btn-primary\">\r\n");
      out.write("								<input type=\"radio\" name=\"userGender\" value=\"여자\" autocomplete=\"off\" required> 여자\r\n");
      out.write("							</label>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<input type=\"email\" class=\"form-control\" placeholder=\"이메일\" name=\"userEmail\" required maxlength=\"50\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<input type=\"submit\" class=\"btn btn-primary form-control\" value=\"회원가입\">\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"col-lg-4\"></div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
