package user;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class UserDAO {
    
    private Connection conn;
    private PreparedStatement pstmt;
    private ResultSet rs;
    private String dbURL = "jdbc:mysql://localhost:3306/BBS?useUnicode=true&characterEncoding=UTF-8";
    private String dbID = "root";
    private String dbPassword = "1234";
    
    public UserDAO() {
        try {

            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(dbURL, dbID, dbPassword);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
 
    // 회원가입
    public int join(User user) {
        String SQL = "INSERT INTO USER VALUES(?, ?, ?, ?, ?)";
        try {
            pstmt = conn.prepareStatement(SQL);
            pstmt.setString(1, user.getUserID());
            pstmt.setString(2, user.getUserPassword());
            pstmt.setString(3, user.getUserName());
            pstmt.setString(4, user.getUserGender());
            pstmt.setString(5, user.getUserEmail());
            return pstmt.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return -1; // 데이터베이스 오류
    }
    
    // 로그인
    public int login(String userID, String userPassword) {
        String SQL = "SELECT userPassword FROM USER WHERE userID = ?";
        try {
            pstmt = conn.prepareStatement(SQL);
            pstmt.setString(1,  userID);
            rs = pstmt.executeQuery();
            if (rs.next()) {
                if(rs.getString(1).equals(userPassword)) {
                    return 1; // 비밀번호 일치, 로그인 성공
                } else
                    return 0; // 비밀번호 불일치
            }
            return -1; // 아이디가 없음
        } catch (Exception e) {
            e.printStackTrace();
        }
        return -2; // 데이터베이스 오류
    }
    
    public int deleteUser(String userID) {
        String deleteUserSQL = "DELETE FROM USER WHERE userID = ?";
        String deletePostsSQL = "DELETE FROM BBS WHERE userID = ?";
        String deleteTasksSQL = "DELETE FROM tasks WHERE userID = ?";
        Connection conn = null;
        PreparedStatement pstmt = null;

        try {
            String dbURL = "jdbc:mysql://localhost:3306/BBS?useUnicode=true&characterEncoding=UTF-8";
            String dbID = "root";
            String dbPassword = "1234";
            conn = DriverManager.getConnection(dbURL, dbID, dbPassword);
            conn.setAutoCommit(false); // 트랜잭션 시작

            // BBS 테이블에서 게시글 삭제
            pstmt = conn.prepareStatement(deletePostsSQL);
            pstmt.setString(1, userID);
            pstmt.executeUpdate();

            // tasks 테이블에서 할 일 삭제
            pstmt = conn.prepareStatement(deleteTasksSQL);
            pstmt.setString(1, userID);
            pstmt.executeUpdate();

            // USER 테이블에서 사용자 삭제
            pstmt = conn.prepareStatement(deleteUserSQL);
            pstmt.setString(1, userID);
            int result = pstmt.executeUpdate();

            conn.commit(); // 트랜잭션 커밋
            return result; // 1이면 성공, 0이면 실패
        } catch (Exception e) {
            if (conn != null) {
                try {
                    conn.rollback(); // 오류 발생 시 롤백
                } catch (SQLException se) {
                    se.printStackTrace();
                }
            }
            e.printStackTrace();
        } finally {
            if (pstmt != null) {
                try {
                    pstmt.close();
                } catch (SQLException se) {
                    se.printStackTrace();
                }
            }
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException se) {
                    se.printStackTrace();
                }
            }
        }
        return -1; // 데이터베이스 오류
    }

    
    // 아이디 찾기
    public String findUserId(String userName, String userEmail) {
        String SQL = "SELECT userID FROM USER WHERE userName = ? AND userEmail = ?";
        try {
            pstmt = conn.prepareStatement(SQL);
            pstmt.setString(1, userName);
            pstmt.setString(2, userEmail);
            rs = pstmt.executeQuery();
            if (rs.next()) {
                return rs.getString("userID");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null; // 일치하는 아이디 없음
    }
    
    // 비밀번호 찾기
    public String findUserPassword(String userID, String userEmail) {
        String SQL = "SELECT userPassword FROM USER WHERE userID = ? AND userEmail = ?";
        try {
            pstmt = conn.prepareStatement(SQL);
            pstmt.setString(1, userID);
            pstmt.setString(2, userEmail);
            rs = pstmt.executeQuery();
            if (rs.next()) {
                return rs.getString("userPassword");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null; // 일치하는 비밀번호 없음
    }
    
    // 아이디 중복 검사
    public boolean isUserIdExist(String userID) {
        String SQL = "SELECT userID FROM USER WHERE userID = ?";
        try {
            pstmt = conn.prepareStatement(SQL);
            pstmt.setString(1, userID);
            rs = pstmt.executeQuery();
            if (rs.next()) {
                return true; // 아이디가 이미 존재
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false; // 아이디가 존재하지 않음
    }
    
    public boolean isUserIdDuplicate(String userID) {
        String SQL = "SELECT * FROM USER WHERE userID = ?";
        try {
            PreparedStatement pstmt = conn.prepareStatement(SQL);
            pstmt.setString(1, userID);
            ResultSet rs = pstmt.executeQuery();
            return rs.next();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }
    
    // 디버깅용 메서드
    public void printDebugInfo(String userName, String userEmail) {
        String SQL = "SELECT * FROM USER";
        try {
            pstmt = conn.prepareStatement(SQL);
            rs = pstmt.executeQuery();
            while (rs.next()) {
                System.out.println("UserID: " + rs.getString("userID") + ", UserName: " + rs.getString("userName") + ", UserEmail: " + rs.getString("userEmail"));
            }
            System.out.println("입력된 이름: " + userName + ", 입력된 이메일: " + userEmail);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    // 사용자 정보 가져오기
    public User getUserInfo(String userID) {
        String SQL = "SELECT userID, userPassword, userName, userGender, userEmail FROM USER WHERE userID = ?";
        try {
            pstmt = conn.prepareStatement(SQL);
            pstmt.setString(1, userID);
            rs = pstmt.executeQuery();
            if (rs.next()) {
                User user = new User();
                user.setUserID(rs.getString("userID"));
                user.setUserPassword(rs.getString("userPassword"));
                user.setUserName(rs.getString("userName"));
                user.setUserGender(rs.getString("userGender"));
                user.setUserEmail(rs.getString("userEmail"));
                return user;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

    // 프로필 업데이트 (비밀번호 변경)
    public int profileUpdate(String userID, String newPassword) {
        String SQL = "UPDATE USER SET userPassword = ? WHERE userID = ?";
        try {
            pstmt = conn.prepareStatement(SQL);
            pstmt.setString(1, newPassword);
            pstmt.setString(2, userID);
            return pstmt.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return -1; // 데이터베이스 오류
    }
}
